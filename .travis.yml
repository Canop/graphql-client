language: rust
rust:
  - stable
  - beta
  - nightly
env:
  - GRAPHQL_STYLE=false GRAPHQL_WASM=false
matrix:
  include:
    - rust: stable
      env:
        - GRAPHQL_STYLE=false
        - GRAPHQL_WASM=true
    - rust: beta
      env:
        - GRAPHQL_STYLE=true
        - GRAPHQL_WASM=false
cache: cargo
addons:
  firefox: latest
before_install:
  - if [ "$GRAPHQL_WASM" = "true" ]; then (wget https://github.com/mozilla/geckodriver/releases/download/v0.23.0/geckodriver-v0.23.0-linux64.tar.gz) fi
  - if [ "$GRAPHQL_WASM" = "true" ]; then (mkdir geckodriver) fi
  - if [ "$GRAPHQL_WASM" = "true" ]; then (tar -xzf geckodriver-v0.23.0-linux64.tar.gz -C geckodriver) fi
  - export PATH=$PATH:$PWD/geckodriver
before_script:
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (sudo apt-get update) fi
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (sudo apt-get install -y nodejs) fi
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (npm i -g prettier) fi
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (rustup component add rustfmt clippy) fi
  - if [ "$GRAPHQL_WASM" = "true" ]; then (rustup target add wasm32-unknown-unknown) fi
  - if [ "$GRAPHQL_WASM" = "true" ]; then (cargo install -f wasm-bindgen-cli) fi
script:
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (cargo fmt --all -- --check) fi
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (cargo clippy -- -D warnings) fi
  - if [ "$GRAPHQL_STYLE" = "true" ]; then (prettier --debug-check -l './**/*.json' './**/*.graphql') fi
  - if [ "$GRAPHQL_STYLE" = "false" ] && [ "$GRAPHQL_WASM" = "false" ]; then (cargo test --all) fi
  - if [ "$GRAPHQL_WASM" = "true" ]; then (xvfb-run cargo test --manifest-path=./graphql_client/Cargo.toml --features="web" --target wasm32-unknown-unknown) fi
